/**
 * @fileoverview gRPC-Web generated client stub for ocr_service
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.12.4
// source: ocr_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as ocr_service_pb from './ocr_service_pb'; // proto import: "ocr_service.proto"


export class OcrServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateFolder = new grpcWeb.MethodDescriptor(
    '/ocr_service.OcrService/CreateFolder',
    grpcWeb.MethodType.UNARY,
    ocr_service_pb.FolderCreationRequest,
    ocr_service_pb.FolderCreationResponse,
    (request: ocr_service_pb.FolderCreationRequest) => {
      return request.serializeBinary();
    },
    ocr_service_pb.FolderCreationResponse.deserializeBinary
  );

  createFolder(
    request: ocr_service_pb.FolderCreationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<ocr_service_pb.FolderCreationResponse>;

  createFolder(
    request: ocr_service_pb.FolderCreationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: ocr_service_pb.FolderCreationResponse) => void): grpcWeb.ClientReadableStream<ocr_service_pb.FolderCreationResponse>;

  createFolder(
    request: ocr_service_pb.FolderCreationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: ocr_service_pb.FolderCreationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ocr_service.OcrService/CreateFolder',
        request,
        metadata || {},
        this.methodDescriptorCreateFolder,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ocr_service.OcrService/CreateFolder',
    request,
    metadata || {},
    this.methodDescriptorCreateFolder);
  }

  methodDescriptorSearchFolders = new grpcWeb.MethodDescriptor(
    '/ocr_service.OcrService/SearchFolders',
    grpcWeb.MethodType.UNARY,
    ocr_service_pb.FolderSearchRequest,
    ocr_service_pb.FolderSearchResponse,
    (request: ocr_service_pb.FolderSearchRequest) => {
      return request.serializeBinary();
    },
    ocr_service_pb.FolderSearchResponse.deserializeBinary
  );

  searchFolders(
    request: ocr_service_pb.FolderSearchRequest,
    metadata?: grpcWeb.Metadata | null): Promise<ocr_service_pb.FolderSearchResponse>;

  searchFolders(
    request: ocr_service_pb.FolderSearchRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: ocr_service_pb.FolderSearchResponse) => void): grpcWeb.ClientReadableStream<ocr_service_pb.FolderSearchResponse>;

  searchFolders(
    request: ocr_service_pb.FolderSearchRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: ocr_service_pb.FolderSearchResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ocr_service.OcrService/SearchFolders',
        request,
        metadata || {},
        this.methodDescriptorSearchFolders,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ocr_service.OcrService/SearchFolders',
    request,
    metadata || {},
    this.methodDescriptorSearchFolders);
  }

  methodDescriptorSearchFileData = new grpcWeb.MethodDescriptor(
    '/ocr_service.OcrService/SearchFileData',
    grpcWeb.MethodType.UNARY,
    ocr_service_pb.SearchFileRequest,
    ocr_service_pb.SearchFileResponse,
    (request: ocr_service_pb.SearchFileRequest) => {
      return request.serializeBinary();
    },
    ocr_service_pb.SearchFileResponse.deserializeBinary
  );

  searchFileData(
    request: ocr_service_pb.SearchFileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<ocr_service_pb.SearchFileResponse>;

  searchFileData(
    request: ocr_service_pb.SearchFileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: ocr_service_pb.SearchFileResponse) => void): grpcWeb.ClientReadableStream<ocr_service_pb.SearchFileResponse>;

  searchFileData(
    request: ocr_service_pb.SearchFileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: ocr_service_pb.SearchFileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ocr_service.OcrService/SearchFileData',
        request,
        metadata || {},
        this.methodDescriptorSearchFileData,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ocr_service.OcrService/SearchFileData',
    request,
    metadata || {},
    this.methodDescriptorSearchFileData);
  }

  methodDescriptorExtractFileData = new grpcWeb.MethodDescriptor(
    '/ocr_service.OcrService/ExtractFileData',
    grpcWeb.MethodType.UNARY,
    ocr_service_pb.ExtractFileRequest,
    ocr_service_pb.ExtractFileResponse,
    (request: ocr_service_pb.ExtractFileRequest) => {
      return request.serializeBinary();
    },
    ocr_service_pb.ExtractFileResponse.deserializeBinary
  );

  extractFileData(
    request: ocr_service_pb.ExtractFileRequest,
    metadata?: grpcWeb.Metadata | null): Promise<ocr_service_pb.ExtractFileResponse>;

  extractFileData(
    request: ocr_service_pb.ExtractFileRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: ocr_service_pb.ExtractFileResponse) => void): grpcWeb.ClientReadableStream<ocr_service_pb.ExtractFileResponse>;

  extractFileData(
    request: ocr_service_pb.ExtractFileRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: ocr_service_pb.ExtractFileResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/ocr_service.OcrService/ExtractFileData',
        request,
        metadata || {},
        this.methodDescriptorExtractFileData,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/ocr_service.OcrService/ExtractFileData',
    request,
    metadata || {},
    this.methodDescriptorExtractFileData);
  }

}

