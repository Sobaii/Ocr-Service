// source: ocr_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.ocr_service.ExpenseField', null, global);
goog.exportSymbol('proto.ocr_service.ExpenseItem', null, global);
goog.exportSymbol('proto.ocr_service.Expenses', null, global);
goog.exportSymbol('proto.ocr_service.ExtractFileRequest', null, global);
goog.exportSymbol('proto.ocr_service.ExtractFileResponse', null, global);
goog.exportSymbol('proto.ocr_service.FileExtract', null, global);
goog.exportSymbol('proto.ocr_service.FolderCreationRequest', null, global);
goog.exportSymbol('proto.ocr_service.FolderCreationResponse', null, global);
goog.exportSymbol('proto.ocr_service.FolderSearchRequest', null, global);
goog.exportSymbol('proto.ocr_service.FolderSearchResponse', null, global);
goog.exportSymbol('proto.ocr_service.MimeType', null, global);
goog.exportSymbol('proto.ocr_service.SearchFileRequest', null, global);
goog.exportSymbol('proto.ocr_service.SearchFileResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.ExtractFileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.ExtractFileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.ExtractFileRequest.displayName = 'proto.ocr_service.ExtractFileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.SearchFileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.SearchFileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.SearchFileRequest.displayName = 'proto.ocr_service.SearchFileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.FolderCreationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.FolderCreationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.FolderCreationRequest.displayName = 'proto.ocr_service.FolderCreationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.FolderSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.FolderSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.FolderSearchRequest.displayName = 'proto.ocr_service.FolderSearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.ExpenseField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.ExpenseField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.ExpenseField.displayName = 'proto.ocr_service.ExpenseField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.FileExtract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.FileExtract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.FileExtract.displayName = 'proto.ocr_service.FileExtract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.ExpenseItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.ExpenseItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.ExpenseItem.displayName = 'proto.ocr_service.ExpenseItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.Expenses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ocr_service.Expenses.repeatedFields_, null);
};
goog.inherits(proto.ocr_service.Expenses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.Expenses.displayName = 'proto.ocr_service.Expenses';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.FolderSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ocr_service.FolderSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.ocr_service.FolderSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.FolderSearchResponse.displayName = 'proto.ocr_service.FolderSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.FolderCreationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.FolderCreationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.FolderCreationResponse.displayName = 'proto.ocr_service.FolderCreationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.SearchFileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.SearchFileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.SearchFileResponse.displayName = 'proto.ocr_service.SearchFileResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ocr_service.ExtractFileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ocr_service.ExtractFileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ocr_service.ExtractFileResponse.displayName = 'proto.ocr_service.ExtractFileResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.ExtractFileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.ExtractFileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.ExtractFileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.ExtractFileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    folderName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    binary: msg.getBinary_asB64(),
    mimeType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.ExtractFileRequest}
 */
proto.ocr_service.ExtractFileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.ExtractFileRequest;
  return proto.ocr_service.ExtractFileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.ExtractFileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.ExtractFileRequest}
 */
proto.ocr_service.ExtractFileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBinary(value);
      break;
    case 4:
      var value = /** @type {!proto.ocr_service.MimeType} */ (reader.readEnum());
      msg.setMimeType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.ExtractFileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.ExtractFileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.ExtractFileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.ExtractFileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBinary_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getMimeType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string email_address = 1;
 * @return {string}
 */
proto.ocr_service.ExtractFileRequest.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.ExtractFileRequest} returns this
 */
proto.ocr_service.ExtractFileRequest.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string folder_name = 2;
 * @return {string}
 */
proto.ocr_service.ExtractFileRequest.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.ExtractFileRequest} returns this
 */
proto.ocr_service.ExtractFileRequest.prototype.setFolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes binary = 3;
 * @return {string}
 */
proto.ocr_service.ExtractFileRequest.prototype.getBinary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes binary = 3;
 * This is a type-conversion wrapper around `getBinary()`
 * @return {string}
 */
proto.ocr_service.ExtractFileRequest.prototype.getBinary_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBinary()));
};


/**
 * optional bytes binary = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBinary()`
 * @return {!Uint8Array}
 */
proto.ocr_service.ExtractFileRequest.prototype.getBinary_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBinary()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ocr_service.ExtractFileRequest} returns this
 */
proto.ocr_service.ExtractFileRequest.prototype.setBinary = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional MimeType mime_type = 4;
 * @return {!proto.ocr_service.MimeType}
 */
proto.ocr_service.ExtractFileRequest.prototype.getMimeType = function() {
  return /** @type {!proto.ocr_service.MimeType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.ocr_service.MimeType} value
 * @return {!proto.ocr_service.ExtractFileRequest} returns this
 */
proto.ocr_service.ExtractFileRequest.prototype.setMimeType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.SearchFileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.SearchFileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.SearchFileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.SearchFileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    folderName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    index: jspb.Message.getFieldWithDefault(msg, 3, ""),
    query: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.SearchFileRequest}
 */
proto.ocr_service.SearchFileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.SearchFileRequest;
  return proto.ocr_service.SearchFileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.SearchFileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.SearchFileRequest}
 */
proto.ocr_service.SearchFileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.SearchFileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.SearchFileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.SearchFileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.SearchFileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIndex();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string email_address = 1;
 * @return {string}
 */
proto.ocr_service.SearchFileRequest.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.SearchFileRequest} returns this
 */
proto.ocr_service.SearchFileRequest.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string folder_name = 2;
 * @return {string}
 */
proto.ocr_service.SearchFileRequest.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.SearchFileRequest} returns this
 */
proto.ocr_service.SearchFileRequest.prototype.setFolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string index = 3;
 * @return {string}
 */
proto.ocr_service.SearchFileRequest.prototype.getIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.SearchFileRequest} returns this
 */
proto.ocr_service.SearchFileRequest.prototype.setIndex = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string query = 4;
 * @return {string}
 */
proto.ocr_service.SearchFileRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.SearchFileRequest} returns this
 */
proto.ocr_service.SearchFileRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.FolderCreationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.FolderCreationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.FolderCreationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FolderCreationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fullName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    folderName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.FolderCreationRequest}
 */
proto.ocr_service.FolderCreationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.FolderCreationRequest;
  return proto.ocr_service.FolderCreationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.FolderCreationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.FolderCreationRequest}
 */
proto.ocr_service.FolderCreationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.FolderCreationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.FolderCreationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.FolderCreationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FolderCreationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFullName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string email_address = 1;
 * @return {string}
 */
proto.ocr_service.FolderCreationRequest.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderCreationRequest} returns this
 */
proto.ocr_service.FolderCreationRequest.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string full_name = 2;
 * @return {string}
 */
proto.ocr_service.FolderCreationRequest.prototype.getFullName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderCreationRequest} returns this
 */
proto.ocr_service.FolderCreationRequest.prototype.setFullName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string folder_name = 3;
 * @return {string}
 */
proto.ocr_service.FolderCreationRequest.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderCreationRequest} returns this
 */
proto.ocr_service.FolderCreationRequest.prototype.setFolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.FolderSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.FolderSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.FolderSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FolderSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    query: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.FolderSearchRequest}
 */
proto.ocr_service.FolderSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.FolderSearchRequest;
  return proto.ocr_service.FolderSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.FolderSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.FolderSearchRequest}
 */
proto.ocr_service.FolderSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.FolderSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.FolderSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.FolderSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FolderSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string email_address = 1;
 * @return {string}
 */
proto.ocr_service.FolderSearchRequest.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderSearchRequest} returns this
 */
proto.ocr_service.FolderSearchRequest.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string query = 2;
 * @return {string}
 */
proto.ocr_service.FolderSearchRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderSearchRequest} returns this
 */
proto.ocr_service.FolderSearchRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.ExpenseField.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.ExpenseField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.ExpenseField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.ExpenseField.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.ExpenseField}
 */
proto.ocr_service.ExpenseField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.ExpenseField;
  return proto.ocr_service.ExpenseField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.ExpenseField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.ExpenseField}
 */
proto.ocr_service.ExpenseField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.ExpenseField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.ExpenseField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.ExpenseField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.ExpenseField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.ocr_service.ExpenseField.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.ExpenseField} returns this
 */
proto.ocr_service.ExpenseField.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double confidence = 2;
 * @return {number}
 */
proto.ocr_service.ExpenseField.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ocr_service.ExpenseField} returns this
 */
proto.ocr_service.ExpenseField.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.FileExtract.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.FileExtract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.FileExtract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FileExtract.toObject = function(includeInstance, msg) {
  var f, obj = {
    filePage: (f = msg.getFilePage()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    fileName: (f = msg.getFileName()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    invoiceReceiptDate: (f = msg.getInvoiceReceiptDate()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    vendorName: (f = msg.getVendorName()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    vendorAddress: (f = msg.getVendorAddress()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    total: (f = msg.getTotal()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    subtotal: (f = msg.getSubtotal()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    tax: (f = msg.getTax()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    vendorPhone: (f = msg.getVendorPhone()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    street: (f = msg.getStreet()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    gratuity: (f = msg.getGratuity()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    city: (f = msg.getCity()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    state: (f = msg.getState()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    country: (f = msg.getCountry()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    zipCode: (f = msg.getZipCode()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    category: (f = msg.getCategory()) && proto.ocr_service.ExpenseField.toObject(includeInstance, f),
    objectUrl: jspb.Message.getFieldWithDefault(msg, 17, ""),
    previewUrl: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.FileExtract}
 */
proto.ocr_service.FileExtract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.FileExtract;
  return proto.ocr_service.FileExtract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.FileExtract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.FileExtract}
 */
proto.ocr_service.FileExtract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setFilePage(value);
      break;
    case 2:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setFileName(value);
      break;
    case 3:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setInvoiceReceiptDate(value);
      break;
    case 4:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setVendorName(value);
      break;
    case 5:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setVendorAddress(value);
      break;
    case 6:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setTotal(value);
      break;
    case 7:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setSubtotal(value);
      break;
    case 8:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setTax(value);
      break;
    case 9:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setVendorPhone(value);
      break;
    case 10:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setStreet(value);
      break;
    case 11:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setGratuity(value);
      break;
    case 12:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setCity(value);
      break;
    case 13:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 14:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setCountry(value);
      break;
    case 15:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setZipCode(value);
      break;
    case 16:
      var value = new proto.ocr_service.ExpenseField;
      reader.readMessage(value,proto.ocr_service.ExpenseField.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjectUrl(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.FileExtract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.FileExtract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.FileExtract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FileExtract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilePage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getFileName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getInvoiceReceiptDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getVendorName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getVendorAddress();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getSubtotal();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getTax();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getVendorPhone();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getStreet();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getGratuity();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getCity();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getCountry();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getZipCode();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.ocr_service.ExpenseField.serializeBinaryToWriter
    );
  }
  f = message.getObjectUrl();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getPreviewUrl();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional ExpenseField file_page = 1;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getFilePage = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 1));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setFilePage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearFilePage = function() {
  return this.setFilePage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasFilePage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ExpenseField file_name = 2;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getFileName = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 2));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setFileName = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearFileName = function() {
  return this.setFileName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasFileName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ExpenseField invoice_receipt_date = 3;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getInvoiceReceiptDate = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 3));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setInvoiceReceiptDate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearInvoiceReceiptDate = function() {
  return this.setInvoiceReceiptDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasInvoiceReceiptDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ExpenseField vendor_name = 4;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getVendorName = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 4));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setVendorName = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearVendorName = function() {
  return this.setVendorName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasVendorName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ExpenseField vendor_address = 5;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getVendorAddress = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 5));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setVendorAddress = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearVendorAddress = function() {
  return this.setVendorAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasVendorAddress = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ExpenseField total = 6;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getTotal = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 6));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setTotal = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearTotal = function() {
  return this.setTotal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasTotal = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ExpenseField subtotal = 7;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getSubtotal = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 7));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setSubtotal = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearSubtotal = function() {
  return this.setSubtotal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasSubtotal = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ExpenseField tax = 8;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getTax = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 8));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setTax = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearTax = function() {
  return this.setTax(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasTax = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ExpenseField vendor_phone = 9;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getVendorPhone = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 9));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setVendorPhone = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearVendorPhone = function() {
  return this.setVendorPhone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasVendorPhone = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ExpenseField street = 10;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getStreet = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 10));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setStreet = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearStreet = function() {
  return this.setStreet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasStreet = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ExpenseField gratuity = 11;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getGratuity = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 11));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setGratuity = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearGratuity = function() {
  return this.setGratuity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasGratuity = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ExpenseField city = 12;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getCity = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 12));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setCity = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearCity = function() {
  return this.setCity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasCity = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ExpenseField state = 13;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getState = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 13));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasState = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ExpenseField country = 14;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getCountry = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 14));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setCountry = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearCountry = function() {
  return this.setCountry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasCountry = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ExpenseField zip_code = 15;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getZipCode = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 15));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setZipCode = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearZipCode = function() {
  return this.setZipCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasZipCode = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ExpenseField category = 16;
 * @return {?proto.ocr_service.ExpenseField}
 */
proto.ocr_service.FileExtract.prototype.getCategory = function() {
  return /** @type{?proto.ocr_service.ExpenseField} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseField, 16));
};


/**
 * @param {?proto.ocr_service.ExpenseField|undefined} value
 * @return {!proto.ocr_service.FileExtract} returns this
*/
proto.ocr_service.FileExtract.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.FileExtract.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string object_url = 17;
 * @return {string}
 */
proto.ocr_service.FileExtract.prototype.getObjectUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.setObjectUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string preview_url = 18;
 * @return {string}
 */
proto.ocr_service.FileExtract.prototype.getPreviewUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FileExtract} returns this
 */
proto.ocr_service.FileExtract.prototype.setPreviewUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.ExpenseItem.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.ExpenseItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.ExpenseItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.ExpenseItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    folderName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: (f = msg.getData()) && proto.ocr_service.FileExtract.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.ExpenseItem}
 */
proto.ocr_service.ExpenseItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.ExpenseItem;
  return proto.ocr_service.ExpenseItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.ExpenseItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.ExpenseItem}
 */
proto.ocr_service.ExpenseItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 2:
      var value = new proto.ocr_service.FileExtract;
      reader.readMessage(value,proto.ocr_service.FileExtract.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.ExpenseItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.ExpenseItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.ExpenseItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.ExpenseItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ocr_service.FileExtract.serializeBinaryToWriter
    );
  }
};


/**
 * optional string folder_name = 1;
 * @return {string}
 */
proto.ocr_service.ExpenseItem.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.ExpenseItem} returns this
 */
proto.ocr_service.ExpenseItem.prototype.setFolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FileExtract data = 2;
 * @return {?proto.ocr_service.FileExtract}
 */
proto.ocr_service.ExpenseItem.prototype.getData = function() {
  return /** @type{?proto.ocr_service.FileExtract} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.FileExtract, 2));
};


/**
 * @param {?proto.ocr_service.FileExtract|undefined} value
 * @return {!proto.ocr_service.ExpenseItem} returns this
*/
proto.ocr_service.ExpenseItem.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.ExpenseItem} returns this
 */
proto.ocr_service.ExpenseItem.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.ExpenseItem.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ocr_service.Expenses.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.Expenses.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.Expenses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.Expenses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.Expenses.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoList: jspb.Message.toObjectList(msg.getInfoList(),
    proto.ocr_service.ExpenseItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.Expenses}
 */
proto.ocr_service.Expenses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.Expenses;
  return proto.ocr_service.Expenses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.Expenses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.Expenses}
 */
proto.ocr_service.Expenses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ocr_service.ExpenseItem;
      reader.readMessage(value,proto.ocr_service.ExpenseItem.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.Expenses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.Expenses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.Expenses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.Expenses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ocr_service.ExpenseItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ExpenseItem info = 1;
 * @return {!Array<!proto.ocr_service.ExpenseItem>}
 */
proto.ocr_service.Expenses.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.ocr_service.ExpenseItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ocr_service.ExpenseItem, 1));
};


/**
 * @param {!Array<!proto.ocr_service.ExpenseItem>} value
 * @return {!proto.ocr_service.Expenses} returns this
*/
proto.ocr_service.Expenses.prototype.setInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ocr_service.ExpenseItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ocr_service.ExpenseItem}
 */
proto.ocr_service.Expenses.prototype.addInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ocr_service.ExpenseItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ocr_service.Expenses} returns this
 */
proto.ocr_service.Expenses.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ocr_service.FolderSearchResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.FolderSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.FolderSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.FolderSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FolderSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    folderFound: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    actionDescription: jspb.Message.getFieldWithDefault(msg, 2, ""),
    foldersList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.FolderSearchResponse}
 */
proto.ocr_service.FolderSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.FolderSearchResponse;
  return proto.ocr_service.FolderSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.FolderSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.FolderSearchResponse}
 */
proto.ocr_service.FolderSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFolderFound(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addFolders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.FolderSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.FolderSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.FolderSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FolderSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFolderFound();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getActionDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFoldersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional bool folder_found = 1;
 * @return {boolean}
 */
proto.ocr_service.FolderSearchResponse.prototype.getFolderFound = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ocr_service.FolderSearchResponse} returns this
 */
proto.ocr_service.FolderSearchResponse.prototype.setFolderFound = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string action_description = 2;
 * @return {string}
 */
proto.ocr_service.FolderSearchResponse.prototype.getActionDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderSearchResponse} returns this
 */
proto.ocr_service.FolderSearchResponse.prototype.setActionDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string folders = 3;
 * @return {!Array<string>}
 */
proto.ocr_service.FolderSearchResponse.prototype.getFoldersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ocr_service.FolderSearchResponse} returns this
 */
proto.ocr_service.FolderSearchResponse.prototype.setFoldersList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ocr_service.FolderSearchResponse} returns this
 */
proto.ocr_service.FolderSearchResponse.prototype.addFolders = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ocr_service.FolderSearchResponse} returns this
 */
proto.ocr_service.FolderSearchResponse.prototype.clearFoldersList = function() {
  return this.setFoldersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.FolderCreationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.FolderCreationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.FolderCreationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FolderCreationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    folderCreated: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    actionDescription: jspb.Message.getFieldWithDefault(msg, 2, ""),
    emailAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fullName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    folderName: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.FolderCreationResponse}
 */
proto.ocr_service.FolderCreationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.FolderCreationResponse;
  return proto.ocr_service.FolderCreationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.FolderCreationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.FolderCreationResponse}
 */
proto.ocr_service.FolderCreationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFolderCreated(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.FolderCreationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.FolderCreationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.FolderCreationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.FolderCreationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFolderCreated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getActionDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFullName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool folder_created = 1;
 * @return {boolean}
 */
proto.ocr_service.FolderCreationResponse.prototype.getFolderCreated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ocr_service.FolderCreationResponse} returns this
 */
proto.ocr_service.FolderCreationResponse.prototype.setFolderCreated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string action_description = 2;
 * @return {string}
 */
proto.ocr_service.FolderCreationResponse.prototype.getActionDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderCreationResponse} returns this
 */
proto.ocr_service.FolderCreationResponse.prototype.setActionDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email_address = 3;
 * @return {string}
 */
proto.ocr_service.FolderCreationResponse.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderCreationResponse} returns this
 */
proto.ocr_service.FolderCreationResponse.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string full_name = 4;
 * @return {string}
 */
proto.ocr_service.FolderCreationResponse.prototype.getFullName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderCreationResponse} returns this
 */
proto.ocr_service.FolderCreationResponse.prototype.setFullName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string folder_name = 5;
 * @return {string}
 */
proto.ocr_service.FolderCreationResponse.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.FolderCreationResponse} returns this
 */
proto.ocr_service.FolderCreationResponse.prototype.setFolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.SearchFileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.SearchFileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.SearchFileResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.SearchFileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileFound: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    actionDescription: jspb.Message.getFieldWithDefault(msg, 2, ""),
    emailAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    folderName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    expenses: (f = msg.getExpenses()) && proto.ocr_service.Expenses.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.SearchFileResponse}
 */
proto.ocr_service.SearchFileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.SearchFileResponse;
  return proto.ocr_service.SearchFileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.SearchFileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.SearchFileResponse}
 */
proto.ocr_service.SearchFileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFileFound(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 5:
      var value = new proto.ocr_service.Expenses;
      reader.readMessage(value,proto.ocr_service.Expenses.deserializeBinaryFromReader);
      msg.setExpenses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.SearchFileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.SearchFileResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.SearchFileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.SearchFileResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileFound();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getActionDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExpenses();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ocr_service.Expenses.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool file_found = 1;
 * @return {boolean}
 */
proto.ocr_service.SearchFileResponse.prototype.getFileFound = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ocr_service.SearchFileResponse} returns this
 */
proto.ocr_service.SearchFileResponse.prototype.setFileFound = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string action_description = 2;
 * @return {string}
 */
proto.ocr_service.SearchFileResponse.prototype.getActionDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.SearchFileResponse} returns this
 */
proto.ocr_service.SearchFileResponse.prototype.setActionDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email_address = 3;
 * @return {string}
 */
proto.ocr_service.SearchFileResponse.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.SearchFileResponse} returns this
 */
proto.ocr_service.SearchFileResponse.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string folder_name = 4;
 * @return {string}
 */
proto.ocr_service.SearchFileResponse.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.SearchFileResponse} returns this
 */
proto.ocr_service.SearchFileResponse.prototype.setFolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Expenses expenses = 5;
 * @return {?proto.ocr_service.Expenses}
 */
proto.ocr_service.SearchFileResponse.prototype.getExpenses = function() {
  return /** @type{?proto.ocr_service.Expenses} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.Expenses, 5));
};


/**
 * @param {?proto.ocr_service.Expenses|undefined} value
 * @return {!proto.ocr_service.SearchFileResponse} returns this
*/
proto.ocr_service.SearchFileResponse.prototype.setExpenses = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.SearchFileResponse} returns this
 */
proto.ocr_service.SearchFileResponse.prototype.clearExpenses = function() {
  return this.setExpenses(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.SearchFileResponse.prototype.hasExpenses = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ocr_service.ExtractFileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ocr_service.ExtractFileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ocr_service.ExtractFileResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.ExtractFileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileExtracted: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    actionDescription: jspb.Message.getFieldWithDefault(msg, 2, ""),
    emailAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    folderName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    file: (f = msg.getFile()) && proto.ocr_service.ExpenseItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ocr_service.ExtractFileResponse}
 */
proto.ocr_service.ExtractFileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ocr_service.ExtractFileResponse;
  return proto.ocr_service.ExtractFileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ocr_service.ExtractFileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ocr_service.ExtractFileResponse}
 */
proto.ocr_service.ExtractFileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFileExtracted(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderName(value);
      break;
    case 5:
      var value = new proto.ocr_service.ExpenseItem;
      reader.readMessage(value,proto.ocr_service.ExpenseItem.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ocr_service.ExtractFileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ocr_service.ExtractFileResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ocr_service.ExtractFileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ocr_service.ExtractFileResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileExtracted();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getActionDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmailAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFolderName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ocr_service.ExpenseItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool file_extracted = 1;
 * @return {boolean}
 */
proto.ocr_service.ExtractFileResponse.prototype.getFileExtracted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ocr_service.ExtractFileResponse} returns this
 */
proto.ocr_service.ExtractFileResponse.prototype.setFileExtracted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string action_description = 2;
 * @return {string}
 */
proto.ocr_service.ExtractFileResponse.prototype.getActionDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.ExtractFileResponse} returns this
 */
proto.ocr_service.ExtractFileResponse.prototype.setActionDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email_address = 3;
 * @return {string}
 */
proto.ocr_service.ExtractFileResponse.prototype.getEmailAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.ExtractFileResponse} returns this
 */
proto.ocr_service.ExtractFileResponse.prototype.setEmailAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string folder_name = 4;
 * @return {string}
 */
proto.ocr_service.ExtractFileResponse.prototype.getFolderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ocr_service.ExtractFileResponse} returns this
 */
proto.ocr_service.ExtractFileResponse.prototype.setFolderName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ExpenseItem file = 5;
 * @return {?proto.ocr_service.ExpenseItem}
 */
proto.ocr_service.ExtractFileResponse.prototype.getFile = function() {
  return /** @type{?proto.ocr_service.ExpenseItem} */ (
    jspb.Message.getWrapperField(this, proto.ocr_service.ExpenseItem, 5));
};


/**
 * @param {?proto.ocr_service.ExpenseItem|undefined} value
 * @return {!proto.ocr_service.ExtractFileResponse} returns this
*/
proto.ocr_service.ExtractFileResponse.prototype.setFile = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ocr_service.ExtractFileResponse} returns this
 */
proto.ocr_service.ExtractFileResponse.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ocr_service.ExtractFileResponse.prototype.hasFile = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.ocr_service.MimeType = {
  MIME_TYPE_UNSPECIFIED: 0,
  IMAGE_JPEG: 1,
  IMAGE_PNG: 2,
  APPLICATION_PDF: 3
};

goog.object.extend(exports, proto.ocr_service);
