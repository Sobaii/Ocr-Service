// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: proto/ocr_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MimeType int32

const (
	MimeType_MIME_TYPE_UNSPECIFIED MimeType = 0
	MimeType_IMAGE_JPEG            MimeType = 1
	MimeType_IMAGE_PNG             MimeType = 2
	MimeType_APPLICATION_PDF       MimeType = 3
)

// Enum value maps for MimeType.
var (
	MimeType_name = map[int32]string{
		0: "MIME_TYPE_UNSPECIFIED",
		1: "IMAGE_JPEG",
		2: "IMAGE_PNG",
		3: "APPLICATION_PDF",
	}
	MimeType_value = map[string]int32{
		"MIME_TYPE_UNSPECIFIED": 0,
		"IMAGE_JPEG":            1,
		"IMAGE_PNG":             2,
		"APPLICATION_PDF":       3,
	}
)

func (x MimeType) Enum() *MimeType {
	p := new(MimeType)
	*p = x
	return p
}

func (x MimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ocr_service_proto_enumTypes[0].Descriptor()
}

func (MimeType) Type() protoreflect.EnumType {
	return &file_proto_ocr_service_proto_enumTypes[0]
}

func (x MimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MimeType.Descriptor instead.
func (MimeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{0}
}

type ExtractFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FolderName string   `protobuf:"bytes,2,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	Binary     []byte   `protobuf:"bytes,3,opt,name=binary,proto3" json:"binary,omitempty"`
	MimeType   MimeType `protobuf:"varint,4,opt,name=mime_type,json=mimeType,proto3,enum=ocr_service.MimeType" json:"mime_type,omitempty"`
}

func (x *ExtractFileRequest) Reset() {
	*x = ExtractFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractFileRequest) ProtoMessage() {}

func (x *ExtractFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractFileRequest.ProtoReflect.Descriptor instead.
func (*ExtractFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{0}
}

func (x *ExtractFileRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExtractFileRequest) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *ExtractFileRequest) GetBinary() []byte {
	if x != nil {
		return x.Binary
	}
	return nil
}

func (x *ExtractFileRequest) GetMimeType() MimeType {
	if x != nil {
		return x.MimeType
	}
	return MimeType_MIME_TYPE_UNSPECIFIED
}

type SearchFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FolderName string `protobuf:"bytes,2,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	Index      string `protobuf:"bytes,3,opt,name=index,proto3" json:"index,omitempty"`
	Query      string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchFileRequest) Reset() {
	*x = SearchFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFileRequest) ProtoMessage() {}

func (x *SearchFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFileRequest.ProtoReflect.Descriptor instead.
func (*SearchFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{1}
}

func (x *SearchFileRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchFileRequest) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *SearchFileRequest) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *SearchFileRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type FolderCreationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FolderName string `protobuf:"bytes,2,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
}

func (x *FolderCreationRequest) Reset() {
	*x = FolderCreationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FolderCreationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderCreationRequest) ProtoMessage() {}

func (x *FolderCreationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FolderCreationRequest.ProtoReflect.Descriptor instead.
func (*FolderCreationRequest) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{2}
}

func (x *FolderCreationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FolderCreationRequest) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

type FolderSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Query  string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *FolderSearchRequest) Reset() {
	*x = FolderSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FolderSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderSearchRequest) ProtoMessage() {}

func (x *FolderSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FolderSearchRequest.ProtoReflect.Descriptor instead.
func (*FolderSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{3}
}

func (x *FolderSearchRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FolderSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ModifyExpenseFieldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ExpenseId uint32 `protobuf:"varint,2,opt,name=expense_id,json=expenseId,proto3" json:"expense_id,omitempty"`
	FieldType string `protobuf:"bytes,3,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
	FieldText string `protobuf:"bytes,4,opt,name=field_text,json=fieldText,proto3" json:"field_text,omitempty"`
}

func (x *ModifyExpenseFieldRequest) Reset() {
	*x = ModifyExpenseFieldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyExpenseFieldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyExpenseFieldRequest) ProtoMessage() {}

func (x *ModifyExpenseFieldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyExpenseFieldRequest.ProtoReflect.Descriptor instead.
func (*ModifyExpenseFieldRequest) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{4}
}

func (x *ModifyExpenseFieldRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ModifyExpenseFieldRequest) GetExpenseId() uint32 {
	if x != nil {
		return x.ExpenseId
	}
	return 0
}

func (x *ModifyExpenseFieldRequest) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

func (x *ModifyExpenseFieldRequest) GetFieldText() string {
	if x != nil {
		return x.FieldText
	}
	return ""
}

type DeleteExpenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ExpenseId uint32 `protobuf:"varint,2,opt,name=expense_id,json=expenseId,proto3" json:"expense_id,omitempty"`
}

func (x *DeleteExpenseRequest) Reset() {
	*x = DeleteExpenseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpenseRequest) ProtoMessage() {}

func (x *DeleteExpenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpenseRequest.ProtoReflect.Descriptor instead.
func (*DeleteExpenseRequest) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteExpenseRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteExpenseRequest) GetExpenseId() uint32 {
	if x != nil {
		return x.ExpenseId
	}
	return 0
}

type ExpenseField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldType  string  `protobuf:"bytes,1,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
	Text       string  `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Confidence float64 `protobuf:"fixed64,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
}

func (x *ExpenseField) Reset() {
	*x = ExpenseField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpenseField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpenseField) ProtoMessage() {}

func (x *ExpenseField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpenseField.ProtoReflect.Descriptor instead.
func (*ExpenseField) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{6}
}

func (x *ExpenseField) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

func (x *ExpenseField) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ExpenseField) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type FileExtract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePage           *ExpenseField `protobuf:"bytes,1,opt,name=file_page,json=filePage,proto3" json:"file_page,omitempty"`
	FileName           *ExpenseField `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	InvoiceReceiptDate *ExpenseField `protobuf:"bytes,3,opt,name=invoice_receipt_date,json=invoiceReceiptDate,proto3" json:"invoice_receipt_date,omitempty"`
	VendorName         *ExpenseField `protobuf:"bytes,4,opt,name=vendor_name,json=vendorName,proto3" json:"vendor_name,omitempty"`
	VendorAddress      *ExpenseField `protobuf:"bytes,5,opt,name=vendor_address,json=vendorAddress,proto3" json:"vendor_address,omitempty"`
	Total              *ExpenseField `protobuf:"bytes,6,opt,name=total,proto3" json:"total,omitempty"`
	Subtotal           *ExpenseField `protobuf:"bytes,7,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	Tax                *ExpenseField `protobuf:"bytes,8,opt,name=tax,proto3" json:"tax,omitempty"`
	VendorPhone        *ExpenseField `protobuf:"bytes,9,opt,name=vendor_phone,json=vendorPhone,proto3" json:"vendor_phone,omitempty"`
	Street             *ExpenseField `protobuf:"bytes,10,opt,name=street,proto3" json:"street,omitempty"`
	Gratuity           *ExpenseField `protobuf:"bytes,11,opt,name=gratuity,proto3" json:"gratuity,omitempty"`
	City               *ExpenseField `protobuf:"bytes,12,opt,name=city,proto3" json:"city,omitempty"`
	State              *ExpenseField `protobuf:"bytes,13,opt,name=state,proto3" json:"state,omitempty"`
	Country            *ExpenseField `protobuf:"bytes,14,opt,name=country,proto3" json:"country,omitempty"`
	ZipCode            *ExpenseField `protobuf:"bytes,15,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	Category           *ExpenseField `protobuf:"bytes,16,opt,name=category,proto3" json:"category,omitempty"`
	ObjectUrl          string        `protobuf:"bytes,17,opt,name=object_url,json=objectUrl,proto3" json:"object_url,omitempty"`
	PreviewUrl         string        `protobuf:"bytes,18,opt,name=preview_url,json=previewUrl,proto3" json:"preview_url,omitempty"`
	ExpenseId          uint32        `protobuf:"varint,19,opt,name=expense_id,json=expenseId,proto3" json:"expense_id,omitempty"`
}

func (x *FileExtract) Reset() {
	*x = FileExtract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileExtract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileExtract) ProtoMessage() {}

func (x *FileExtract) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileExtract.ProtoReflect.Descriptor instead.
func (*FileExtract) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{7}
}

func (x *FileExtract) GetFilePage() *ExpenseField {
	if x != nil {
		return x.FilePage
	}
	return nil
}

func (x *FileExtract) GetFileName() *ExpenseField {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *FileExtract) GetInvoiceReceiptDate() *ExpenseField {
	if x != nil {
		return x.InvoiceReceiptDate
	}
	return nil
}

func (x *FileExtract) GetVendorName() *ExpenseField {
	if x != nil {
		return x.VendorName
	}
	return nil
}

func (x *FileExtract) GetVendorAddress() *ExpenseField {
	if x != nil {
		return x.VendorAddress
	}
	return nil
}

func (x *FileExtract) GetTotal() *ExpenseField {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *FileExtract) GetSubtotal() *ExpenseField {
	if x != nil {
		return x.Subtotal
	}
	return nil
}

func (x *FileExtract) GetTax() *ExpenseField {
	if x != nil {
		return x.Tax
	}
	return nil
}

func (x *FileExtract) GetVendorPhone() *ExpenseField {
	if x != nil {
		return x.VendorPhone
	}
	return nil
}

func (x *FileExtract) GetStreet() *ExpenseField {
	if x != nil {
		return x.Street
	}
	return nil
}

func (x *FileExtract) GetGratuity() *ExpenseField {
	if x != nil {
		return x.Gratuity
	}
	return nil
}

func (x *FileExtract) GetCity() *ExpenseField {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *FileExtract) GetState() *ExpenseField {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *FileExtract) GetCountry() *ExpenseField {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *FileExtract) GetZipCode() *ExpenseField {
	if x != nil {
		return x.ZipCode
	}
	return nil
}

func (x *FileExtract) GetCategory() *ExpenseField {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *FileExtract) GetObjectUrl() string {
	if x != nil {
		return x.ObjectUrl
	}
	return ""
}

func (x *FileExtract) GetPreviewUrl() string {
	if x != nil {
		return x.PreviewUrl
	}
	return ""
}

func (x *FileExtract) GetExpenseId() uint32 {
	if x != nil {
		return x.ExpenseId
	}
	return 0
}

type ExpenseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderName string       `protobuf:"bytes,1,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	Data       *FileExtract `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExpenseItem) Reset() {
	*x = ExpenseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpenseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpenseItem) ProtoMessage() {}

func (x *ExpenseItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpenseItem.ProtoReflect.Descriptor instead.
func (*ExpenseItem) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{8}
}

func (x *ExpenseItem) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *ExpenseItem) GetData() *FileExtract {
	if x != nil {
		return x.Data
	}
	return nil
}

type Expenses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info []*ExpenseItem `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *Expenses) Reset() {
	*x = Expenses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expenses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expenses) ProtoMessage() {}

func (x *Expenses) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expenses.ProtoReflect.Descriptor instead.
func (*Expenses) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{9}
}

func (x *Expenses) GetInfo() []*ExpenseItem {
	if x != nil {
		return x.Info
	}
	return nil
}

type FolderSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderFound       bool     `protobuf:"varint,1,opt,name=folder_found,json=folderFound,proto3" json:"folder_found,omitempty"`
	ActionDescription string   `protobuf:"bytes,2,opt,name=action_description,json=actionDescription,proto3" json:"action_description,omitempty"`
	Folders           []string `protobuf:"bytes,3,rep,name=folders,proto3" json:"folders,omitempty"`
}

func (x *FolderSearchResponse) Reset() {
	*x = FolderSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FolderSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderSearchResponse) ProtoMessage() {}

func (x *FolderSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FolderSearchResponse.ProtoReflect.Descriptor instead.
func (*FolderSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{10}
}

func (x *FolderSearchResponse) GetFolderFound() bool {
	if x != nil {
		return x.FolderFound
	}
	return false
}

func (x *FolderSearchResponse) GetActionDescription() string {
	if x != nil {
		return x.ActionDescription
	}
	return ""
}

func (x *FolderSearchResponse) GetFolders() []string {
	if x != nil {
		return x.Folders
	}
	return nil
}

type FolderCreationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderCreated     bool   `protobuf:"varint,1,opt,name=folder_created,json=folderCreated,proto3" json:"folder_created,omitempty"`
	ActionDescription string `protobuf:"bytes,2,opt,name=action_description,json=actionDescription,proto3" json:"action_description,omitempty"`
	UserId            string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FolderName        string `protobuf:"bytes,4,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
}

func (x *FolderCreationResponse) Reset() {
	*x = FolderCreationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FolderCreationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FolderCreationResponse) ProtoMessage() {}

func (x *FolderCreationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FolderCreationResponse.ProtoReflect.Descriptor instead.
func (*FolderCreationResponse) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{11}
}

func (x *FolderCreationResponse) GetFolderCreated() bool {
	if x != nil {
		return x.FolderCreated
	}
	return false
}

func (x *FolderCreationResponse) GetActionDescription() string {
	if x != nil {
		return x.ActionDescription
	}
	return ""
}

func (x *FolderCreationResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FolderCreationResponse) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

type SearchFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileFound         bool      `protobuf:"varint,1,opt,name=file_found,json=fileFound,proto3" json:"file_found,omitempty"`
	ActionDescription string    `protobuf:"bytes,2,opt,name=action_description,json=actionDescription,proto3" json:"action_description,omitempty"`
	UserId            string    `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FolderName        string    `protobuf:"bytes,4,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	Expenses          *Expenses `protobuf:"bytes,5,opt,name=expenses,proto3" json:"expenses,omitempty"`
}

func (x *SearchFileResponse) Reset() {
	*x = SearchFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFileResponse) ProtoMessage() {}

func (x *SearchFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFileResponse.ProtoReflect.Descriptor instead.
func (*SearchFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{12}
}

func (x *SearchFileResponse) GetFileFound() bool {
	if x != nil {
		return x.FileFound
	}
	return false
}

func (x *SearchFileResponse) GetActionDescription() string {
	if x != nil {
		return x.ActionDescription
	}
	return ""
}

func (x *SearchFileResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SearchFileResponse) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *SearchFileResponse) GetExpenses() *Expenses {
	if x != nil {
		return x.Expenses
	}
	return nil
}

type ExtractFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileExtracted     bool         `protobuf:"varint,1,opt,name=file_extracted,json=fileExtracted,proto3" json:"file_extracted,omitempty"`
	ActionDescription string       `protobuf:"bytes,2,opt,name=action_description,json=actionDescription,proto3" json:"action_description,omitempty"`
	UserId            string       `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FolderName        string       `protobuf:"bytes,4,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	File              *ExpenseItem `protobuf:"bytes,5,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *ExtractFileResponse) Reset() {
	*x = ExtractFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractFileResponse) ProtoMessage() {}

func (x *ExtractFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractFileResponse.ProtoReflect.Descriptor instead.
func (*ExtractFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{13}
}

func (x *ExtractFileResponse) GetFileExtracted() bool {
	if x != nil {
		return x.FileExtracted
	}
	return false
}

func (x *ExtractFileResponse) GetActionDescription() string {
	if x != nil {
		return x.ActionDescription
	}
	return ""
}

func (x *ExtractFileResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExtractFileResponse) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *ExtractFileResponse) GetFile() *ExpenseItem {
	if x != nil {
		return x.File
	}
	return nil
}

type ModifyExpenseFieldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpenseFieldModified bool    `protobuf:"varint,1,opt,name=expense_field_modified,json=expenseFieldModified,proto3" json:"expense_field_modified,omitempty"`
	ActionDescription    string  `protobuf:"bytes,2,opt,name=action_description,json=actionDescription,proto3" json:"action_description,omitempty"`
	ExpenseId            uint32  `protobuf:"varint,3,opt,name=expense_id,json=expenseId,proto3" json:"expense_id,omitempty"`
	FieldType            string  `protobuf:"bytes,4,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
	FieldText            string  `protobuf:"bytes,5,opt,name=field_text,json=fieldText,proto3" json:"field_text,omitempty"`
	Confidence           float64 `protobuf:"fixed64,6,opt,name=confidence,proto3" json:"confidence,omitempty"`
}

func (x *ModifyExpenseFieldResponse) Reset() {
	*x = ModifyExpenseFieldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyExpenseFieldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyExpenseFieldResponse) ProtoMessage() {}

func (x *ModifyExpenseFieldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyExpenseFieldResponse.ProtoReflect.Descriptor instead.
func (*ModifyExpenseFieldResponse) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{14}
}

func (x *ModifyExpenseFieldResponse) GetExpenseFieldModified() bool {
	if x != nil {
		return x.ExpenseFieldModified
	}
	return false
}

func (x *ModifyExpenseFieldResponse) GetActionDescription() string {
	if x != nil {
		return x.ActionDescription
	}
	return ""
}

func (x *ModifyExpenseFieldResponse) GetExpenseId() uint32 {
	if x != nil {
		return x.ExpenseId
	}
	return 0
}

func (x *ModifyExpenseFieldResponse) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

func (x *ModifyExpenseFieldResponse) GetFieldText() string {
	if x != nil {
		return x.FieldText
	}
	return ""
}

func (x *ModifyExpenseFieldResponse) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type DeleteExpenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpenseDeleted    bool   `protobuf:"varint,1,opt,name=expense_deleted,json=expenseDeleted,proto3" json:"expense_deleted,omitempty"`
	ActionDescription string `protobuf:"bytes,2,opt,name=action_description,json=actionDescription,proto3" json:"action_description,omitempty"`
	ExpenseId         uint32 `protobuf:"varint,3,opt,name=expense_id,json=expenseId,proto3" json:"expense_id,omitempty"`
}

func (x *DeleteExpenseResponse) Reset() {
	*x = DeleteExpenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_ocr_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpenseResponse) ProtoMessage() {}

func (x *DeleteExpenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ocr_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpenseResponse.ProtoReflect.Descriptor instead.
func (*DeleteExpenseResponse) Descriptor() ([]byte, []int) {
	return file_proto_ocr_service_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteExpenseResponse) GetExpenseDeleted() bool {
	if x != nil {
		return x.ExpenseDeleted
	}
	return false
}

func (x *DeleteExpenseResponse) GetActionDescription() string {
	if x != nil {
		return x.ActionDescription
	}
	return ""
}

func (x *DeleteExpenseResponse) GetExpenseId() uint32 {
	if x != nil {
		return x.ExpenseId
	}
	return 0
}

var File_proto_ocr_service_proto protoreflect.FileDescriptor

var file_proto_ocr_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6f, 0x63, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12,
	0x32, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x79, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x51,
	0x0a, 0x15, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x44, 0x0a, 0x13, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x91, 0x01, 0x0a, 0x19, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x22, 0x4e, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x0c, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xe6,
	0x07, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x36,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b,
	0x0a, 0x14, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f,
	0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0a, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78,
	0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0d, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x75,
	0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f,
	0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70,
	0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x3c,
	0x0a, 0x0c, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x0b, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f,
	0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12,
	0x35, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x74, 0x75, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x67, 0x72,
	0x61, 0x74, 0x75, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x7a,
	0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65,
	0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65,
	0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x08, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78,
	0x70, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x82, 0x01, 0x0a, 0x14, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xcf, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31,
	0x0a, 0x08, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x52, 0x08, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65,
	0x73, 0x22, 0xd3, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x65, 0x64,
	0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x1a, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73,
	0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x65, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x65, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x2a, 0x59, 0x0a, 0x08, 0x4d, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x13, 0x0a, 0x0f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50,
	0x44, 0x46, 0x10, 0x03, 0x32, 0xa3, 0x04, 0x0a, 0x0a, 0x4f, 0x63, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x20, 0x2e,
	0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x63, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x26, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x63, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x45, 0x78,
	0x70, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x63, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ocr_service_proto_rawDescOnce sync.Once
	file_proto_ocr_service_proto_rawDescData = file_proto_ocr_service_proto_rawDesc
)

func file_proto_ocr_service_proto_rawDescGZIP() []byte {
	file_proto_ocr_service_proto_rawDescOnce.Do(func() {
		file_proto_ocr_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ocr_service_proto_rawDescData)
	})
	return file_proto_ocr_service_proto_rawDescData
}

var file_proto_ocr_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_ocr_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_ocr_service_proto_goTypes = []interface{}{
	(MimeType)(0),                      // 0: ocr_service.MimeType
	(*ExtractFileRequest)(nil),         // 1: ocr_service.ExtractFileRequest
	(*SearchFileRequest)(nil),          // 2: ocr_service.SearchFileRequest
	(*FolderCreationRequest)(nil),      // 3: ocr_service.FolderCreationRequest
	(*FolderSearchRequest)(nil),        // 4: ocr_service.FolderSearchRequest
	(*ModifyExpenseFieldRequest)(nil),  // 5: ocr_service.ModifyExpenseFieldRequest
	(*DeleteExpenseRequest)(nil),       // 6: ocr_service.DeleteExpenseRequest
	(*ExpenseField)(nil),               // 7: ocr_service.ExpenseField
	(*FileExtract)(nil),                // 8: ocr_service.FileExtract
	(*ExpenseItem)(nil),                // 9: ocr_service.ExpenseItem
	(*Expenses)(nil),                   // 10: ocr_service.Expenses
	(*FolderSearchResponse)(nil),       // 11: ocr_service.FolderSearchResponse
	(*FolderCreationResponse)(nil),     // 12: ocr_service.FolderCreationResponse
	(*SearchFileResponse)(nil),         // 13: ocr_service.SearchFileResponse
	(*ExtractFileResponse)(nil),        // 14: ocr_service.ExtractFileResponse
	(*ModifyExpenseFieldResponse)(nil), // 15: ocr_service.ModifyExpenseFieldResponse
	(*DeleteExpenseResponse)(nil),      // 16: ocr_service.DeleteExpenseResponse
}
var file_proto_ocr_service_proto_depIdxs = []int32{
	0,  // 0: ocr_service.ExtractFileRequest.mime_type:type_name -> ocr_service.MimeType
	7,  // 1: ocr_service.FileExtract.file_page:type_name -> ocr_service.ExpenseField
	7,  // 2: ocr_service.FileExtract.file_name:type_name -> ocr_service.ExpenseField
	7,  // 3: ocr_service.FileExtract.invoice_receipt_date:type_name -> ocr_service.ExpenseField
	7,  // 4: ocr_service.FileExtract.vendor_name:type_name -> ocr_service.ExpenseField
	7,  // 5: ocr_service.FileExtract.vendor_address:type_name -> ocr_service.ExpenseField
	7,  // 6: ocr_service.FileExtract.total:type_name -> ocr_service.ExpenseField
	7,  // 7: ocr_service.FileExtract.subtotal:type_name -> ocr_service.ExpenseField
	7,  // 8: ocr_service.FileExtract.tax:type_name -> ocr_service.ExpenseField
	7,  // 9: ocr_service.FileExtract.vendor_phone:type_name -> ocr_service.ExpenseField
	7,  // 10: ocr_service.FileExtract.street:type_name -> ocr_service.ExpenseField
	7,  // 11: ocr_service.FileExtract.gratuity:type_name -> ocr_service.ExpenseField
	7,  // 12: ocr_service.FileExtract.city:type_name -> ocr_service.ExpenseField
	7,  // 13: ocr_service.FileExtract.state:type_name -> ocr_service.ExpenseField
	7,  // 14: ocr_service.FileExtract.country:type_name -> ocr_service.ExpenseField
	7,  // 15: ocr_service.FileExtract.zip_code:type_name -> ocr_service.ExpenseField
	7,  // 16: ocr_service.FileExtract.category:type_name -> ocr_service.ExpenseField
	8,  // 17: ocr_service.ExpenseItem.data:type_name -> ocr_service.FileExtract
	9,  // 18: ocr_service.Expenses.info:type_name -> ocr_service.ExpenseItem
	10, // 19: ocr_service.SearchFileResponse.expenses:type_name -> ocr_service.Expenses
	9,  // 20: ocr_service.ExtractFileResponse.file:type_name -> ocr_service.ExpenseItem
	3,  // 21: ocr_service.OcrService.CreateFolder:input_type -> ocr_service.FolderCreationRequest
	4,  // 22: ocr_service.OcrService.SearchFolders:input_type -> ocr_service.FolderSearchRequest
	2,  // 23: ocr_service.OcrService.SearchFileData:input_type -> ocr_service.SearchFileRequest
	1,  // 24: ocr_service.OcrService.ExtractFileData:input_type -> ocr_service.ExtractFileRequest
	5,  // 25: ocr_service.OcrService.ModifyExpenseField:input_type -> ocr_service.ModifyExpenseFieldRequest
	6,  // 26: ocr_service.OcrService.DeleteExpense:input_type -> ocr_service.DeleteExpenseRequest
	12, // 27: ocr_service.OcrService.CreateFolder:output_type -> ocr_service.FolderCreationResponse
	11, // 28: ocr_service.OcrService.SearchFolders:output_type -> ocr_service.FolderSearchResponse
	13, // 29: ocr_service.OcrService.SearchFileData:output_type -> ocr_service.SearchFileResponse
	14, // 30: ocr_service.OcrService.ExtractFileData:output_type -> ocr_service.ExtractFileResponse
	15, // 31: ocr_service.OcrService.ModifyExpenseField:output_type -> ocr_service.ModifyExpenseFieldResponse
	16, // 32: ocr_service.OcrService.DeleteExpense:output_type -> ocr_service.DeleteExpenseResponse
	27, // [27:33] is the sub-list for method output_type
	21, // [21:27] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_proto_ocr_service_proto_init() }
func file_proto_ocr_service_proto_init() {
	if File_proto_ocr_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_ocr_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FolderCreationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FolderSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyExpenseFieldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpenseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpenseField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileExtract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpenseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expenses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FolderSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FolderCreationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyExpenseFieldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_ocr_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ocr_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ocr_service_proto_goTypes,
		DependencyIndexes: file_proto_ocr_service_proto_depIdxs,
		EnumInfos:         file_proto_ocr_service_proto_enumTypes,
		MessageInfos:      file_proto_ocr_service_proto_msgTypes,
	}.Build()
	File_proto_ocr_service_proto = out.File
	file_proto_ocr_service_proto_rawDesc = nil
	file_proto_ocr_service_proto_goTypes = nil
	file_proto_ocr_service_proto_depIdxs = nil
}
